GET     /_internal_/healthcheck                                   controllers.Internal.healthcheck

GET     /                                                         controllers.Application.index(orgsPage: Int ?= 0, membershipRequestsPage: Int ?= 0)

GET     /login                                                    controllers.LoginController.redirect
GET     /login/                                                   controllers.LoginController.index
POST    /login/                                                   controllers.LoginController.indexPost
POST    /login/register                                           controllers.LoginController.registerPost

GET     /logout                                                   controllers.LogoutController.logout
GET     /logged_out                                               controllers.LogoutController.logged_out

GET     /doc                                                      controllers.DocController.redirect
GET     /doc/                                                     controllers.DocController.index
GET     /doc/apiJson                                              controllers.DocController.apiJson
GET     /doc/types                                                controllers.DocController.types
GET     /doc/codeGeneration                                       controllers.DocController.codeGeneration
GET     /doc/examples                                             controllers.DocController.examples
GET     /doc/history                                              controllers.DocController.history
GET     /doc/todo                                                 controllers.DocController.todo

GET     /org/create                                               controllers.Organizations.create
POST    /org/createPost                                           controllers.Organizations.createPost

GET     /:orgKey/members                                          controllers.Members.show(orgKey: String, page: Int ?= 0)
GET     /:orgKey/members/add                                      controllers.Members.add(orgKey: String)
POST    /:orgKey/members/addPost                                  controllers.Members.addPost(orgKey: String)

POST    /:orgKey/memberships/request                              controllers.Organizations.requestMembership(orgKey: String)
GET     /:orgKey/membershipRequests                               controllers.Organizations.membershipRequests(orgKey: String, page: Int ?= 0)
POST    /:orgKey/membership_request_reviews/accept                controllers.MembershipRequestReviews.accept(orgKey: String, membership_request_guid: java.util.UUID)
POST    /:orgKey/membership_request_reviews/decline               controllers.MembershipRequestReviews.decline(orgKey: String, membership_request_guid: java.util.UUID)

GET     /:orgKey                                                  controllers.Organizations.show(orgKey: String, page: Int ?= 0)
# GET     /:orgKey/register                                       controllers.Organizations.register(orgKey: String)

GET     /:orgKey/version/create                                   controllers.Versions.create(orgKey: String, version: Option[String] ?= None)
POST    /:orgKey/version/createPost                               controllers.Versions.createPost(orgKey: String)

GET     /:orgKey/docs/:serviceKey/:version                        controllers.Versions.show(orgKey: String, serviceKey: String, version: String)
GET     /:orgKey/api.json/:serviceKey/:version                    controllers.Versions.apiJson(orgKey: String, serviceKey: String, version: String)

GET     /code/:organization/:service/:version/:target              controllers.Code.generate(organization: String, service: String, version: String, target: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                             controllers.Assets.at(path="/public", file)

