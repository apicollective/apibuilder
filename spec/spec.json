{
    "name": "apidoc spec",
    "description": "Specification of apidoc api.json schema",

    "info": {
	"contact": {
	    "name": "Michael Bryzek",
	    "email": "mbryzek@alum.mit.edu",
	    "url": "http://twitter.com/mbryzek"
	},
	"license": {
	    "name": "MIT",
	    "url": "http://opensource.org/licenses/MIT"
	}
    },

    "enums": {
	"method": {
	    "values": [
		{ "name": "GET" },
		{ "name": "POST" },
		{ "name": "PUT" },
		{ "name": "PATCH" },
		{ "name": "DELETE" },
		{ "name": "HEAD" },
		{ "name": "CONNECT" },
		{ "name": "OPTIONS" },
		{ "name": "TRACE" }
	    ]
	},

	"parameter_location": {
	    "values": [
		{ "name": "Path" },
		{ "name": "Query" },
		{ "name": "Form" }
	    ]
	},

	"response_code_option": {
	    "values": [
		{ "name": "Default" }
	    ]
	}
    },

    "unions": {
	"response_code": {
	    "types": [
		{ "type": "integer", "description": "Documents an HTTP status code (e.g. 200, 409, etc.)" },
		{ "type": "response_code_option", "description": "An individual operation can specify a response code of default to handle all other response codes. This is most useful for providing consistent error handling from an operation." }
	    ]
	}
    },

    "models": {
	"apidoc": {
	    "fields": [
		{ "name": "version", "type": "string", "example": "1.0.3" }
	    ]
	},

	"service": {
	    "fields": [
		{ "name": "apidoc", "type": "apidoc", "description": "Documents that this is an apidoc document, noting the specific version used. Internally the version is then used for backwards compatibility when applicable as new features are added to apidoc." },
		{ "name": "name", "type": "string" },
		{ "name": "organization", "type": "organization" },
		{ "name": "application", "type": "application" },
		{ "name": "namespace", "type": "string", "description": "Fully qualified namespace for this service", "example": "com.bryzek.apidoc" },
		{ "name": "version", "type": "string", "example": "1.0.0" },
		{ "name": "base_url", "type": "string", "required": false },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "info", "type": "info" },
		{ "name": "headers", "type": "[header]", "default": "[]" },
		{ "name": "imports", "type": "[import]", "default": "[]" },
		{ "name": "enums", "type": "[enum]", "default": "[]" },
		{ "name": "unions", "type": "[union]", "default": "[]" },
		{ "name": "models", "type": "[model]", "default": "[]" },
		{ "name": "resources", "type": "[resource]", "default": "[]" }
	    ]
	},

	"organization": {
	    "fields": [
		{ "name": "key", "type": "string", "description": "Unique key identifying the organization that owns this service" }
	    ]
	},

	"application": {
	    "fields": [
		{ "name": "key", "type": "string", "description": "Unique key identifying this application" }
	    ]
	},

	"enum": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "plural", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "values", "type": "[enum_value]" },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"enum_value": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"union": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "plural", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "types", "type": "[union_type]", "minimum": 1, "description": "The names of the types that make up this union type" },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"union_type": {
	    "description": "Metadata about one of the types that is part of a union type",
	    "fields": [
		{ "name": "type", "type": "string", "description": "The name of a type (a primitive, model name, or enum name) that makes up this union type" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"model": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "plural", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "fields", "type": "[field]" },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"field": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "type", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "default", "type": "string", "required": false },
		{ "name": "required", "type": "boolean" },
		{ "name": "minimum", "type": "long", "required": false },
		{ "name": "maximum", "type": "long", "required": false },
		{ "name": "example", "type": "string", "required": false },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"resource": {
	    "fields": [
		{ "name": "type", "type": "string", "description": "The type of this resource will map to a defined model, enum, or union type" },
		{ "name": "plural", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "operations", "type": "[operation]" }
	    ]
	},

	"operation": {
	    "fields": [
		{ "name": "method", "type": "method" },
		{ "name": "path", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "body", "type": "body", "required": false },
		{ "name": "parameters", "type": "[parameter]", "default": "[]" },
		{ "name": "responses", "type": "[response]", "default": "[]" },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"body": {
	    "fields": [
		{ "name": "type", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"parameter": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "type", "type": "string" },
		{ "name": "location", "type": "parameter_location" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "required", "type": "boolean" },
		{ "name": "default", "type": "string", "required": false },
		{ "name": "minimum", "type": "long", "required": false },
		{ "name": "maximum", "type": "long", "required": false },
		{ "name": "example", "type": "string", "required": false },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"response": {
	    "fields": [
		{ "name": "code", "type": "response_code" },
		{ "name": "type", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"info": {
	    "description": "General metadata about this service",
	    "fields": [
		{ "name": "license", "type": "license", "required": false },
		{ "name": "contact", "type": "contact", "required": false }
	    ]
	},

	"license": {
	    "description": "Describes the software license contact for this service",
	    "fields": [
		{ "name": "name", "type": "string", "example": "MIT" },
		{ "name": "url", "type": "string", "required": false, "example": "http://opensource.org/licenses/MIT" }
	    ]
	},

	"contact": {
	    "description": "Describes the primary contact for this service",
	    "fields": [
		{ "name": "name", "type": "string", "example": "Michael Bryzek", "required": false  },
		{ "name": "url", "type": "string", "example": "http://www.apidoc.me", "required": false  },
		{ "name": "email", "type": "string", "example": "michael@test.apidoc.me", "required": false  }
	    ]
	},

	"header": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "type", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "deprecation", "type": "deprecation", "required": false },
		{ "name": "required", "type": "boolean" },
		{ "name": "default", "type": "string", "required": false },
		{ "name": "custom_attributes", "type": "[custom_attribute]" }
	    ]
	},

	"import": {
	    "description": "An import is used to declare a dependency on another application. This allows you to reference the models and or enums from that application in your own app.",
	    "fields": [
		{ "name": "uri", "type": "string", "description": "Full URI to the service.json file of the service we are importing", "example": "http://www.apidoc.me/bryzek/apidoc-spec/0.7.38/service.json"  },
		{ "name": "namespace", "type": "string", "description": "the fully qualified namespace that we have imported", "example": "com.bryzek.apidoc" },
		{ "name": "organization", "type": "organization" },
		{ "name": "application", "type": "application" },
		{ "name": "version", "type": "string", "description": "The version of the service that we are importing", "example": "1.0.0" },
		{ "name": "enums", "type": "[string]", "description": "Models made available by this import", "default": "[]" },
		{ "name": "unions", "type": "[string]", "description": "Unions made available by this import", "default": "[]" },
		{ "name": "models", "type": "[string]", "description": "Models made available by this import", "default": "[]" }
	    ]
	},

	"deprecation": {
	    "description": "Indicates that this particular element is considered deprecated in the API. See the description for details",
	    "fields": [
		{ "name": "description", "type": "string", "required": false }
	    ]
	},

	"custom_attribute": {
	    "description": "Allows for custom extension of apidoc. Custom attributes are made available to custom generators to allow extension for specific functionality",
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "descrpition", "type": "string", "required": false },
		{ "name": "value", "type": "string" },
		{ "name": "deprecation", "type": "deprecation", "required": false }
	    ]
	}

    }

}
