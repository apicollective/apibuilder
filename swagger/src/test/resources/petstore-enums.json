{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "contact": {
      "name": "wordnik api team",
      "url": "http://developer.wordnik.com"
    },
    "license": {
      "name": "Creative Commons 4.0 International",
      "url": "http://creativecommons.org/licenses/by/4.0/"
    }
  },
  "host": "petstore.swagger.wordnik.com",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/pets/{status}": {
      "get": {
        "summary": "find pets by status - as a path param",
        "parameters":[
          {
            "name":"status",
            "in":"path",
            "required":true,
            "type":"string",
            "enum":["available", "pending", "sold"]
          }
        ],
        "responses": {
          "200": {
            "description": "find pet response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            },
            "headers": {
              "x-expires": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "delete pets by status - as a path param",
        "operationId": "deletePet",
        "tags": ["tag1", "tag2"],
        "parameters":[
          {
            "name":"status",
            "in":"path",
            "required":true,
            "type":"string",
            "enum":["available", "pending", "sold"]
          }
        ],
        "responses": {
          "204": {
            "description": "pets deleted - no response body content"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pets/": {
      "get": {
        "summary": "find pets by name and status - as query params",
        "parameters":[
          {
            "name":"name",
            "in":"query",
            "required":true,
            "type":"string"
          },
          {
            "name":"status",
            "in":"query",
            "required":true,
            "type":"string",
            "enum":["available", "pending", "sold"]
          }
        ],
        "responses": {
          "200": {
            "description": "find pet response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            },
            "headers": {
              "x-expires": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Pet": {
      "description": "Definition of a pet",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["available", "pending", "sold"]
        }
      }
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
