GET        /code/:versionGuid/:targetName         controllers.Code.getByVersionGuidAndTargetName(versionGuid: java.util.UUID, targetName: String)
GET        /_internal_/healthcheck                controllers.Healthchecks.get()
GET        /membership_requests                   controllers.MembershipRequests.get(org_guid: Option[java.util.UUID], org_key: Option[String], user_guid: Option[java.util.UUID], role: Option[String], limit: Int ?= 25, offset: Int ?= 0)
POST       /membership_requests                   controllers.MembershipRequests.post()
POST       /membership_requests/:guid/accept      controllers.MembershipRequests.postAcceptByGuid(guid: java.util.UUID)
POST       /membership_requests/:guid/decline     controllers.MembershipRequests.postDeclineByGuid(guid: java.util.UUID)
GET        /memberships                           controllers.Memberships.get(org_guid: Option[java.util.UUID], org_key: Option[String], user_guid: Option[java.util.UUID], role: Option[String], limit: Int ?= 25, offset: Int ?= 0)
GET        /organizations                         controllers.Organizations.get(guid: Option[java.util.UUID], user_guid: Option[java.util.UUID], key: Option[String], name: Option[String], limit: Int ?= 25, offset: Int ?= 0)
POST       /organizations                         controllers.Organizations.post()
DELETE     /organizations/:guid                   controllers.Organizations.deleteByGuid(guid: java.util.UUID)
GET        /users                                 controllers.Users.get(guid: Option[java.util.UUID], email: Option[String], token: Option[String])
GET        /users/:guid                           controllers.Users.getByGuid(guid: java.util.UUID)
POST       /users                                 controllers.Users.post()
POST       /users/authenticate                    controllers.Users.postAuthenticate()
PUT        /users/:guid                           controllers.Users.putByGuid(guid: java.util.UUID)
GET        /:orgKey                               controllers.Services.getByOrgKey(orgKey: String, name: Option[String], key: Option[String], limit: Int ?= 25, offset: Int ?= 0)
DELETE     /:orgKey/:serviceKey                   controllers.Services.deleteByOrgKeyAndServiceKey(orgKey: String, serviceKey: String)
GET        /:orgKey/:serviceKey                   controllers.Versions.getByOrgKeyAndServiceKey(orgKey: String, serviceKey: String, limit: Int ?= 25, offset: Int ?= 0)
GET        /:orgKey/:serviceKey/:version          controllers.Versions.getByOrgKeyAndServiceKeyAndVersion(orgKey: String, serviceKey: String, version: String)
PUT        /:orgKey/:serviceKey/:version          controllers.Versions.putByOrgKeyAndServiceKeyAndVersion(orgKey: String, serviceKey: String, version: String)
DELETE     /:orgKey/:serviceKey/:version          controllers.Versions.deleteByOrgKeyAndServiceKeyAndVersion(orgKey: String, serviceKey: String, version: String)